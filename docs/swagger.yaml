definitions:
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      status:
        type: string
    type: object
  models.UserCreate:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        type: string
    type: object
  models.UserUpdateBase:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/health-check:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      tags:
      - Health Check
  /api/user:
    get:
      consumes:
      - application/json
      description: This endpoint Get all users
      produces:
      - application/json
      responses:
        "200":
          description: Usuarios
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: This endpoint Get all users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: This endpoint Create a new user
      parameters:
      - description: Datos del usuario
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Usuario creado
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Error de validación
          schema:
            additionalProperties:
              type: string
            type: object
      summary: This endpoint Create a new user
      tags:
      - User
  /api/user/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint Delete a user by ID
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: Usuario eliminado
        "404":
          description: Usuario no encontrado
          schema:
            additionalProperties:
              type: string
            type: object
      summary: This endpoint Delete a user by ID
      tags:
      - User
    get:
      consumes:
      - application/json
      description: This endpoint Get a user by ID
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Usuario
          schema:
            $ref: '#/definitions/models.User'
        "404":
          description: Usuario no encontrado
          schema:
            additionalProperties:
              type: string
            type: object
      summary: This endpoint Get a user by ID
      tags:
      - User
    patch:
      consumes:
      - application/json
      description: This endpoint Update a user by ID
      parameters:
      - description: ID del usuario
        in: path
        name: id
        required: true
        type: integer
      - description: Datos del usuario
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.UserUpdateBase'
      produces:
      - application/json
      responses:
        "200":
          description: Usuario actualizado
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Error de validación
          schema:
            additionalProperties:
              type: string
            type: object
      summary: This endpoint Update a user by ID
      tags:
      - User
swagger: "2.0"
